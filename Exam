import java.util.*;

class WeatherStation {
    private static WeatherStation instance;
    private List<WeatherObserver> observers = new ArrayList<>();
    private List<String> weatherHistory = new ArrayList<>();

    private String temperature;
    private String humidity;
    private String pressure;

    private WeatherStation() {}

    public static WeatherStation getInstance() {
        if (instance == null) {
            instance = new WeatherStation();
        }
        return instance;
    }

    public void setWeatherData(String temperature, String humidity, String pressure) {
        this.temperature = temperature;
        this.humidity = humidity;
        this.pressure = pressure;

        String weatherData = "Temp: " + temperature + ", Humidity: " + humidity + ", Pressure: " + pressure;
        weatherHistory.add(weatherData);

        notifyObservers();
    }

    public String getTemperature() {
        return temperature;
    }

    public String getHumidity() {
        return humidity;
    }

    public String getPressure() {
        return pressure;
    }

    public void addObserver(WeatherObserver observer) {
        observers.add(observer);
    }

    public void removeObserver(WeatherObserver observer) {
        observers.remove(observer);
    }

    private void notifyObservers() {
        for (WeatherObserver observer : observers) {
            observer.update(temperature, humidity, pressure);
        }
    }

    public WeatherIterator getHistoryIterator() {
        return new WeatherIterator(weatherHistory);
    }
}

interface WeatherObserver {
    void update(String temperature, String humidity, String pressure);
}

class ConsoleWeatherObserver implements WeatherObserver {
    private String name;

    public ConsoleWeatherObserver(String name) {
        this.name = name;
    }

    @Override
    public void update(String temperature, String humidity, String pressure) {
        System.out.println(name + " received update: Temp=" + temperature + ", Humidity=" + humidity + ", Pressure=" + pressure);
    }
}

class WeatherProxy {
    private WeatherStation station;

    public WeatherProxy() {
        this.station = WeatherStation.getInstance();
    }

    public String getTemperature() {
        return station.getTemperature();
    }

    public String getHumidity() {
        return station.getHumidity();
    }

    public String getPressure() {
        return station.getPressure();
    }

    public void setWeatherData(String temperature, String humidity, String pressure) {
        station.setWeatherData(temperature, humidity, pressure);
    }

    public WeatherIterator getHistoryIterator() {
        return station.getHistoryIterator();
    }
}

class WeatherIterator {
    private List<String> weatherHistory;
    private int currentIndex = 0;

    public WeatherIterator(List<String> weatherHistory) {
        this.weatherHistory = weatherHistory;
    }

    public boolean hasNext() {
        return currentIndex < weatherHistory.size();
    }

    public String next() {
        if (!hasNext()) {
            throw new NoSuchElementException();
        }
        return weatherHistory.get(currentIndex++);
    }
}

public class WeatherMonitoringSystem {
    public static void main(String[] args) {
        WeatherProxy proxy = new WeatherProxy();

        WeatherObserver observer1 = new ConsoleWeatherObserver("Observer1");
        WeatherObserver observer2 = new ConsoleWeatherObserver("Observer2");

        WeatherStation station = WeatherStation.getInstance();
        station.addObserver(observer1);
        station.addObserver(observer2);

        proxy.setWeatherData("25C", "60%", "1013hPa");
        proxy.setWeatherData("26C", "55%", "1012hPa");

        WeatherIterator iterator = proxy.getHistoryIterator();
        System.out.println("Weather history:");
        while (iterator.hasNext()) {
            System.out.println(iterator.next());
        }
    }
}
